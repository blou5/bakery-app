##### Stage 1: Build Angular Application
FROM node:lts-alpine AS build
WORKDIR /app

# Install brotli for precompression
RUN apk add --no-cache brotli

# Install deps and build
COPY package.json package-lock.json ./
RUN npm ci
COPY . .
RUN npm run build

# Precompress only text assets
WORKDIR /app/dist/bakery-app/browser
# gzip (optional, if you also want .gz)
# RUN find . -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" -o -name "*.svg" -o -name "*.xml" -o -name "*.txt" \) -exec gzip -k -9 {} \;

# brotli
RUN find . -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" -o -name "*.svg" -o -name "*.xml" -o -name "*.txt" \) -exec brotli -f -q 11 {} \;

##### Stage 2: Nginx with HTTP/3 support
FROM ghcr.io/macbre/nginx-http3:latest

# App files
COPY --from=build /app/dist/bakery-app/browser /usr/share/nginx/html

# Nginx configs (make sure these two files don't conflict)
COPY config/dev/default.conf /etc/nginx/conf.d/default.conf
COPY config/prod/compression.conf /etc/nginx/conf.d/compression.conf

# Expose Nginx ports (80 for HTTP; 443 TCP/UDP if you enable TLS/HTTP3)
EXPOSE 80
# EXPOSE 443/tcp
# EXPOSE 443/udp
